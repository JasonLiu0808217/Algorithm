/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    
    private Boolean p_exist, q_exist;
    public TreeNode LowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        TreeNode result = Helper(root, p, q);
        if(p_exist && q_exist)
        {
            return result;
        }
        return null;
    }
    
    private TreeNode Helper(TreeNode root, TreeNode p, TreeNode q){
        if(root == null)
        {
            return null;
        }

        TreeNode left = Helper(root.left, p ,q);
        TreeNode right = Helper(root.right, p ,q);
            
                
        if(root == p)
        {
            p_exist = true;
            return root;
        }
        if(root == q)
        {
            q_exist = true;
            return root;
        }
        
    
        if(left != null && right != null)
        {
            return root;
        }
        if(left == null)
        {
            return right;
        }
        if(right == null)
        {
            return left;
        }
        return null;
        
    }
}
